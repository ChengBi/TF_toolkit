{
    "inputs_placeholder":{
        "name": "inputs_placeholder",
        "shape": [-1, 28, 28, 1],
        "dtype": "float32"
    },
    "targets_placeholder":{
        "name": "targets_placeholder",
        "shape": [-1, 10],
        "dtype": "float32"
    },
    "layers":{
        "maxpooling1":{
            "layer_type": "maxpooling_layer",
            "padding": "VALID",
            "strides": [1, 2, 2 ,1],
            "ksize": [1, 2, 2, 1]
        },
        "convolution1":{
            "layer_type": "convolution_layer",
            "input_dim": 1,
            "output_dim": 64,
            "kernel_size1": 5,
            "kernel_size2": 5,
            "padding": "VALID",
            "strides": [1, 1, 1, 1],
            "activation": "relu"
        },
        "maxpooling2":{
            "layer_type": "maxpooling_layer",
            "padding": "VALID",
            "strides": [1, 2, 2 ,1],
            "ksize": [1, 2, 2, 1]
        },
        "convolution2":{
            "layer_type": "convolution_layer",
            "input_dim": 64,
            "output_dim": 128,
            "kernel_size1": 5,
            "kernel_size2": 5,
            "padding": "VALID",
            "strides": [1, 1, 1, 1],
            "activation": "relu"
        },
        "reshape1":{
            "layer_type": "reshape_layer",
            "shape": [-1, 128]
        },
        "affine1":{
            "layer_type": "affine_layer",
            "input_dim": 128,
            "output_dim": 128,
            "activation": "relu"
        },
        "affine2":{
            "layer_type": "affine_layer",
            "input_dim": 128,
            "output_dim": 64,
            "activation": "relu"
        },
        "affine3":{
            "layer_type": "affine_layer",
            "input_dim": 64,
            "output_dim": 10,
            "activation": ""
        }
    },
    "optimizer":{
        "opt_type": "adam",
        "lr": 1e-3
    },
    "loss":{
        "loss_type":"cross_entropy"
    },
    "iteration":10,
    "interval":5,
    "run_mode":"train"

}
